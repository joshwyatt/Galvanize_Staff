exports[`App Welcome renders its child components 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="container">
    <h2
        className="center">
        Galvanize Staff
    </h2>
    <div
        className="container">
        <Connect(Component) />
    </div>
    <Connect(Component) />
    <CSSTransitionGroup
        transitionAppear={true}
        transitionAppearTimeout={1000}
        transitionEnter={false}
        transitionLeave={false}
        transitionName="example">
        <Connect(Component) />
    </CSSTransitionGroup>
</div>,
  "nodes": Array [
    <div
      className="container">
      <h2
            className="center">
            Galvanize Staff
      </h2>
      <div
            className="container">
            <Connect(Component) />
      </div>
      <Connect(Component) />
      <CSSTransitionGroup
            transitionAppear={true}
            transitionAppearTimeout={1000}
            transitionEnter={false}
            transitionLeave={false}
            transitionName="example">
            <Connect(Component) />
      </CSSTransitionGroup>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <App />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="container">
          <h2
                    className="center">
                    Galvanize Staff
          </h2>
          <div
                    className="container">
                    <Connect(Component) />
          </div>
          <Connect(Component) />
          <CSSTransitionGroup
                    transitionAppear={true}
                    transitionAppearTimeout={1000}
                    transitionEnter={false}
                    transitionLeave={false}
                    transitionName="example">
                    <Connect(Component) />
          </CSSTransitionGroup>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="container">
          <h2
                    className="center">
                    Galvanize Staff
          </h2>
          <div
                    className="container">
                    <Connect(Component) />
          </div>
          <Connect(Component) />
          <CSSTransitionGroup
                    transitionAppear={true}
                    transitionAppearTimeout={1000}
                    transitionEnter={false}
                    transitionLeave={false}
                    transitionName="example">
                    <Connect(Component) />
          </CSSTransitionGroup>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <App />,
}
`;
